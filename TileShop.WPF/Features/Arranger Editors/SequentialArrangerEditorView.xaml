<UserControl
    x:Class="TileShop.WPF.Views.SequentialArrangerEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:TileShop.WPF.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dd="urn:gong-wpf-dragdrop"
    xmlns:h="clr-namespace:TileShop.WPF.Helpers"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:TileShop.WPF.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:TileShop.WPF.Models"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    xmlns:ui="http://schemas.modernwpf.com/2019"
    xmlns:vm="clr-namespace:TileShop.WPF.ViewModels"
    d:DataContext="{d:DesignInstance Type=vm:SequentialArrangerEditorViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Focusable="True"
    mc:Ignorable="d">

    <UserControl.Resources>
        <h:BindingProxy x:Key="editorProxy" Data="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:SequentialArrangerEditorView}}, Path=DataContext}" />
    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding Key="OemPlus" Command="{s:Action MoveByteDown}" />
        <KeyBinding Key="Add" Command="{s:Action MoveByteDown}" />
        <KeyBinding Key="Subtract" Command="{s:Action MoveByteUp}" />
        <KeyBinding Key="OemMinus" Command="{s:Action MoveByteUp}" />
        <KeyBinding Key="Down" Command="{s:Action MoveRowDown}" />
        <KeyBinding Key="Up" Command="{s:Action MoveRowUp}" />
        <KeyBinding Key="Right" Command="{s:Action MoveColumnRight}" />
        <KeyBinding Key="Left" Command="{s:Action MoveColumnLeft}" />
        <KeyBinding Key="PageDown" Command="{s:Action MovePageDown}" />
        <KeyBinding Key="PageUp" Command="{s:Action MovePageUp}" />
        <KeyBinding Key="Home" Command="{s:Action MoveHome}" />
        <KeyBinding Key="End" Command="{s:Action MoveEnd}" />
        <KeyBinding Key="OemQuestion" Command="{s:Action ExpandWidth}" />
        <KeyBinding Key="OemPeriod" Command="{s:Action ShrinkWidth}" />
        <KeyBinding Key="L" Command="{s:Action ShrinkHeight}" />
        <KeyBinding Key="OemSemicolon" Command="{s:Action ExpandHeight}" />
        <KeyBinding Key="F" Command="{s:Action SelectNextCodec}" />
        <KeyBinding Key="D" Command="{s:Action SelectPreviousCodec}" />
        <KeyBinding Key="Z" Command="{s:Action ZoomIn}" />
        <KeyBinding Key="X" Command="{s:Action ZoomOut}" />
        <KeyBinding Key="G" Command="{s:Action ToggleGridlineVisibility}" />
        <KeyBinding Key="J" Command="{s:Action JumpToOffset}" />
        <KeyBinding Key="E" Command="{s:Action EditSelection}" />
        <KeyBinding Key="S" Command="{s:Action ToggleSnapMode}" />
        <KeyBinding Key="Escape" Command="{s:Action CancelOverlay}" />
        <KeyBinding
            Key="A"
            Command="{s:Action SelectAll}"
            Modifiers="Ctrl" />
    </UserControl.InputBindings>

    <Grid UseLayoutRounding="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  Toolbar  -->
        <Border
            Grid.Row="0"
            Grid.Column="0"
            BorderBrush="{DynamicResource SystemControlBackgroundBaseLowBrush}"
            BorderThickness="0,0,0,2">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <!--  Top Toolbar  -->
                <StackPanel
                    Grid.Row="0"
                    Margin="0,5,0,0"
                    Orientation="Horizontal">

                    <!--  Codec Tools  -->
                    <StackPanel>
                        <TextBlock HorizontalAlignment="Center" Text="Codec" />

                        <StackPanel Orientation="Horizontal">
                            <ComboBox
                                Height="35"
                                MinWidth="180"
                                Focusable="False"
                                ItemsSource="{Binding CodecNames}"
                                SelectedValue="{Binding SelectedCodecName}"
                                ToolTip="Active Codec (F, D)" />

                            <ui:NumberBox
                                Margin="2,0,0,0"
                                IsEnabled="{Binding CanResize}"
                                LargeChange="{Binding ElementWidthIncrement}"
                                Minimum="{Binding ElementWidthIncrement}"
                                SmallChange="{Binding ElementWidthIncrement}"
                                SpinButtonPlacementMode="Inline"
                                Style="{StaticResource tsNumberBox}"
                                ToolTip="Element width in pixels"
                                ValidationMode="InvalidInputOverwritten"
                                Visibility="{Binding IsTiledLayout, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                                Value="{Binding TiledElementWidth}" />

                            <ui:NumberBox
                                Margin="2,0,0,0"
                                IsEnabled="{Binding CanResize}"
                                LargeChange="{Binding ElementHeightIncrement}"
                                Minimum="{Binding ElementHeightIncrement}"
                                SmallChange="{Binding ElementHeightIncrement}"
                                SpinButtonPlacementMode="Inline"
                                Style="{StaticResource tsNumberBox}"
                                ToolTip="Element height in pixels"
                                ValidationMode="InvalidInputOverwritten"
                                Visibility="{Binding IsTiledLayout, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                                Value="{Binding TiledElementHeight}" />

                        </StackPanel>
                    </StackPanel>

                    <Border
                        Margin="8,6,6,0"
                        BorderBrush="{DynamicResource separatorBrush}"
                        BorderThickness="1" />

                    <!--  Arranger Tools  -->
                    <StackPanel>
                        <TextBlock HorizontalAlignment="Center" Text="Arranger" />
                        <StackPanel Orientation="Horizontal">

                            <ComboBox
                                Height="35"
                                Focusable="False"
                                ItemsSource="{Binding Palettes}"
                                SelectedItem="{Binding SelectedPalette}"
                                Visibility="{Binding Palettes.Count, Converter={StaticResource MultipleCountToVisibilityConverter}}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>

                            <!--  Resize Arranger Dimensions in Elements  -->
                            <ui:NumberBox
                                Margin="2,0,0,0"
                                LargeChange="{Binding ArrangerWidthIncrement}"
                                Minimum="{Binding ArrangerWidthIncrement}"
                                SmallChange="{Binding ArrangerWidthIncrement}"
                                SpinButtonPlacementMode="Inline"
                                Style="{StaticResource tsNumberBox}"
                                ToolTip="Arranger width in elements (/, .)"
                                ValidationMode="InvalidInputOverwritten"
                                Visibility="{Binding IsTiledLayout, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                                Value="{Binding TiledArrangerWidth}" />

                            <ui:NumberBox
                                Margin="2,0,0,0"
                                LargeChange="{Binding ArrangerHeightIncrement}"
                                Minimum="{Binding ArrangerHeightIncrement}"
                                SmallChange="{Binding ArrangerHeightIncrement}"
                                SpinButtonPlacementMode="Inline"
                                Style="{StaticResource tsNumberBox}"
                                ToolTip="Arranger height in elements (;, L)"
                                ValidationMode="InvalidInputOverwritten"
                                Visibility="{Binding IsTiledLayout, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                                Value="{Binding TiledArrangerHeight}" />

                            <!--  Resize Arranger Dimensions in Pixels  -->
                            <ui:NumberBox
                                Margin="2,0,0,0"
                                IsEnabled="{Binding CanResize}"
                                LargeChange="{Binding ElementWidthIncrement}"
                                Minimum="{Binding ElementWidthIncrement}"
                                SmallChange="{Binding ElementWidthIncrement}"
                                SpinButtonPlacementMode="Inline"
                                Style="{StaticResource tsNumberBox}"
                                ToolTip="Arranger width in pixels (/, .)"
                                ValidationMode="InvalidInputOverwritten"
                                Visibility="{Binding IsSingleLayout, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                                Value="{Binding LinearArrangerWidth}" />

                            <ui:NumberBox
                                Margin="2,0,0,0"
                                IsEnabled="{Binding CanResize}"
                                LargeChange="{Binding ElementHeightIncrement}"
                                Minimum="{Binding ElementHeightIncrement}"
                                SmallChange="{Binding ElementHeightIncrement}"
                                SpinButtonPlacementMode="Inline"
                                Style="{StaticResource tsNumberBox}"
                                ToolTip="Arranger height in pixels (;, L)"
                                ValidationMode="InvalidInputOverwritten"
                                Visibility="{Binding IsSingleLayout, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                                Value="{Binding LinearArrangerHeight}" />

                            <!--  Element Layout  -->
                            <ui:DropDownButton
                                Margin="2,0,0,0"
                                VerticalAlignment="Top"
                                Style="{StaticResource toolbarDropDownButtonStyle}"
                                ToolTip="Element Layout Pattern"
                                Visibility="{Binding IsTiledLayout, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                                <ui:DropDownButton.Content>
                                    <Image Style="{StaticResource iconElementLayout}" />
                                </ui:DropDownButton.Content>

                                <ui:DropDownButton.Flyout>
                                    <ui:MenuFlyout Placement="BottomEdgeAlignedLeft">
                                        <MenuItem
                                            s:View.ActionTarget="{Binding Data, Source={StaticResource editorProxy}}"
                                            Command="{s:Action ApplyDefaultElementLayout}"
                                            Header="Default" />
                                        <MenuItem
                                            Header="Saved Layouts"
                                            ItemsSource="{Binding TileLayoutNames}"
                                            UsesItemContainerTemplate="True"
                                            Visibility="{Binding TileLayoutNames.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                            <MenuItem.Resources>
                                                <!--  x:Key vs DataType issue here: https://github.com/dotnet/wpf/issues/2404  -->
                                                <ItemContainerTemplate x:Key="{ItemContainerTemplateKey {x:Type sys:String}}">
                                                    <MenuItem
                                                        s:View.ActionTarget="{Binding Data, Source={StaticResource editorProxy}}"
                                                        Command="{s:Action ChangeElementLayout}"
                                                        CommandParameter="{Binding}"
                                                        Header="{Binding}" />
                                                </ItemContainerTemplate>
                                            </MenuItem.Resources>
                                        </MenuItem>
                                        <MenuItem
                                            s:View.ActionTarget="{Binding Data, Source={StaticResource editorProxy}}"
                                            Command="{s:Action CreateCustomLayout}"
                                            Header="Custom Layout..." />
                                    </ui:MenuFlyout>
                                </ui:DropDownButton.Flyout>
                            </ui:DropDownButton>
                        </StackPanel>
                    </StackPanel>

                    <Border
                        Margin="5,6,5,0"
                        BorderBrush="{DynamicResource separatorBrush}"
                        BorderThickness="1" />

                    <StackPanel>
                        <StackPanel Orientation="Vertical">
                            <TextBlock HorizontalAlignment="Center" Text="Zoom" />
                            <Slider
                                MinWidth="100"
                                Margin="5,0,5,0"
                                Focusable="False"
                                Maximum="{Binding MaxZoom}"
                                Minimum="{Binding MinZoom}"
                                ToolTip="Zoom (Z, X)"
                                Value="{Binding Zoom}" />
                        </StackPanel>
                    </StackPanel>

                    <StackPanel>
                        <TextBlock HorizontalAlignment="Center" Text="Grid" />

                        <ToggleButton
                            Focusable="False"
                            IsChecked="{Binding ShowGridlines}"
                            Style="{StaticResource toolBarToggleButtonStyle}"
                            ToolTip="Toggle gridline visibility (G)">
                            <Image Style="{StaticResource iconGrid}" />
                        </ToggleButton>
                    </StackPanel>

                    <StackPanel Margin="2,0,0,0">
                        <TextBlock HorizontalAlignment="Center" Text="Snap" />

                        <ToggleButton
                            Focusable="False"
                            IsChecked="{Binding SnapMode, Converter={StaticResource SnapModeBooleanConverter}}"
                            Style="{StaticResource toolBarToggleButtonStyle}"
                            ToolTip="Snap Selection to Elements (S)"
                            Visibility="{Binding CanChangeSnapMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Image Style="{StaticResource iconSnap}" />
                        </ToggleButton>
                    </StackPanel>

                    <StackPanel Margin="2,0,0,0">
                        <TextBlock HorizontalAlignment="Center" Text="Edit" />

                        <Button
                            Click="{s:Action EditSelection}"
                            Focusable="False"
                            IsEnabled="{Binding CanEditSelection}"
                            Style="{StaticResource toolBarButtonStyle}"
                            ToolTip="Opens selection in the pixel editor (E)">
                            <Image Style="{StaticResource iconEdit}" />
                        </Button>
                    </StackPanel>
                </StackPanel>

                <!--  Bottom Toolbar  -->
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        MinWidth="60"
                        Margin="5,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding FileOffset, StringFormat={}{0:X}}"
                        TextAlignment="Right"
                        ToolTip="Current File Offset in Hexadecimal" />
                    <Slider
                        Grid.Column="1"
                        Margin="10,0,10,0"
                        Focusable="False"
                        IsSnapToTickEnabled="True"
                        LargeChange="{Binding ArrangerPageSize}"
                        Maximum="{Binding MaxFileDecodingOffset}"
                        Minimum="0"
                        SmallChange="{Binding ArrangerPageSize}"
                        TickFrequency="{Binding ArrangerPageSize}"
                        Value="{Binding FileOffset}" />
                </Grid>

            </Grid>
        </Border>

        <!--  Image Display  -->
        <ScrollViewer
            Grid.Row="1"
            Grid.Column="0"
            Background="{DynamicResource SystemControlTransparentBrush}"
            Focusable="True"
            HorizontalScrollBarVisibility="Auto"
            VerticalScrollBarVisibility="Auto">

            <i:Interaction.Behaviors>
                <behaviors:CaptureCtrlWheelMouseBehavior Proxy="{Binding}" />
            </i:Interaction.Behaviors>

            <ScrollViewer.InputBindings>
                <KeyBinding Key="Down" Command="{s:Action MoveRowDown}" />
                <KeyBinding Key="Up" Command="{s:Action MoveRowUp}" />
                <KeyBinding Key="Right" Command="{s:Action MoveColumnRight}" />
                <KeyBinding Key="Left" Command="{s:Action MoveColumnLeft}" />
                <KeyBinding Key="PageDown" Command="{s:Action MovePageDown}" />
                <KeyBinding Key="PageUp" Command="{s:Action MovePageUp}" />
                <KeyBinding Key="Home" Command="{s:Action MoveHome}" />
                <KeyBinding Key="End" Command="{s:Action MoveEnd}" />
            </ScrollViewer.InputBindings>

            <Grid
                Margin="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}, Converter={StaticResource ScrollViewerToMarginStringConverter}}"
                HorizontalAlignment="Left"
                VerticalAlignment="Top">
                <Grid.Resources>
                    <ScaleTransform x:Key="transform" ScaleX="{Binding Zoom}" ScaleY="{Binding Zoom}" />
                </Grid.Resources>

                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{s:Action SelectAll}" Header="Select All" />
                        <MenuItem
                            Command="{s:Action NewScatteredArrangerFromSelection}"
                            Header="New ScatteredArranger From Selection..."
                            IsEnabled="{Binding Overlay.State, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Selected}"
                            Visibility="{Binding IsTiledLayout, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
                        <MenuItem
                            Command="{s:Action NewScatteredArrangerFromImage}"
                            Header="New ScatteredArranger From Image..."
                            Visibility="{Binding IsSingleLayout, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
                    </ContextMenu>
                </Grid.ContextMenu>

                <i:Interaction.Behaviors>
                    <behaviors:MouseCaptureBehavior Proxy="{Binding}" ShouldCaptureMouseWheel="False" />
                </i:Interaction.Behaviors>

                <!--  Arranger Image  -->
                <Image
                    Grid.Row="0"
                    Grid.Column="0"
                    Panel.ZIndex="1"
                    LayoutTransform="{StaticResource transform}"
                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                    SnapsToDevicePixels="True"
                    Source="{Binding BitmapAdapter.Bitmap}"
                    Stretch="None" />

                <!--  Selection and Paste Overlay  -->
                <Canvas
                    x:Name="overlayCanvas"
                    Grid.Row="0"
                    Grid.Column="0"
                    Panel.ZIndex="2"
                    dd:DragDrop.DragHandler="{Binding}"
                    dd:DragDrop.IsDragSource="True"
                    LayoutTransform="{StaticResource transform}">
                    <Rectangle
                        Canvas.Left="{Binding Selection.SelectionRect.SnappedLeft}"
                        Canvas.Top="{Binding Selection.SelectionRect.SnappedTop}"
                        Width="{Binding Selection.SelectionRect.SnappedWidth}"
                        Height="{Binding Selection.SelectionRect.SnappedHeight}"
                        Fill="{StaticResource editSelectionFillBrush}"
                        Stroke="Black"
                        StrokeDashArray="3 2"
                        StrokeThickness="0.3"
                        Visibility="{Binding Selection.HasSelection, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Canvas>

                <!--  Gridline Overlay  -->
                <ItemsControl
                    Grid.Row="0"
                    Grid.Column="0"
                    Panel.ZIndex="4"
                    IsHitTestVisible="False"
                    ItemsSource="{Binding Gridlines}"
                    Visibility="{Binding ShowGridlines, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type model:Gridline}">
                            <Line
                                RenderOptions.EdgeMode="Aliased"
                                SnapsToDevicePixels="True"
                                Stroke="{DynamicResource gridLineBrush}"
                                StrokeThickness="1"
                                UseLayoutRounding="True"
                                X1="{Binding X1}"
                                X2="{Binding X2}"
                                Y1="{Binding Y1}"
                                Y2="{Binding Y2}">
                                <Line.LayoutTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Line.LayoutTransform>
                            </Line>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>

        </ScrollViewer>
    </Grid>
</UserControl>
