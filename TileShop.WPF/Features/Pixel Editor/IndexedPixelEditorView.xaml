<UserControl
    x:Class="TileShop.WPF.Views.IndexedPixelEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:TileShop.WPF.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dd="urn:gong-wpf-dragdrop"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:TileShop.WPF.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:TileShop.WPF.Models"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:vm="clr-namespace:TileShop.WPF.ViewModels"
    d:DataContext="{d:DesignInstance Type=vm:IndexedPixelEditorViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary Source="/Styles/ValidatedPaletteStyles.xaml" />
    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding Key="Z" Command="{s:Action ZoomIn}" />
        <KeyBinding Key="X" Command="{s:Action ZoomOut}" />
        <KeyBinding Key="G" Command="{s:Action ToggleGridlineVisibility}" />
        <KeyBinding Key="Escape" Command="{s:Action CancelOverlay}" />
        <KeyBinding Key="Return" Command="{s:Action ConfirmPendingOperation}" />
        <KeyBinding
            Key="S"
            Command="{s:Action SaveChanges}"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="Z"
            Command="{s:Action Undo}"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="Y"
            Command="{s:Action Redo}"
            Modifiers="Ctrl" />
    </UserControl.InputBindings>

    <Grid x:Name="pixelEditor" UseLayoutRounding="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--  Toolbar  -->
        <StackPanel Grid.ColumnSpan="2" Orientation="Horizontal">
            <StackPanel Margin="10,0,10,0">
                <TextBlock HorizontalAlignment="Center" Text="Zoom" />
                <Slider
                    MinWidth="100"
                    Maximum="{Binding MaxZoom}"
                    Minimum="{Binding MinZoom}"
                    ToolTip="Zoom (Z, X)"
                    Value="{Binding Zoom}" />
            </StackPanel>

            <StackPanel VerticalAlignment="Center">
                <TextBlock HorizontalAlignment="Center" Text="Grid" />
                <ToggleButton
                    Focusable="False"
                    IsChecked="{Binding ShowGridlines}"
                    Style="{StaticResource toolBarToggleButtonStyle}"
                    ToolTip="Toggle gridline visibility (G)">
                    <Image Style="{StaticResource iconGrid}" />
                </ToggleButton>
            </StackPanel>

            <Border
                Margin="5,6,5,4"
                BorderBrush="{DynamicResource separatorBrush}"
                BorderThickness="1" />

            <!--  Tools  -->
            <StackPanel>
                <TextBlock HorizontalAlignment="Center" Text="Tools" />

                <StackPanel Orientation="Horizontal">
                    <RadioButton
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        GroupName="Tools"
                        IsChecked="{Binding ActiveTool, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Select}"
                        Style="{StaticResource toolBarToggleButtonStyle}"
                        ToolTip="Select Tool">
                        <Image Style="{StaticResource iconCursor}" />
                    </RadioButton>
                    <RadioButton
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        GroupName="Tools"
                        IsChecked="{Binding ActiveTool, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Pencil}"
                        Style="{StaticResource toolBarToggleButtonStyle}"
                        ToolTip="Pencil Tool">
                        <Image Style="{StaticResource iconPencil}" />
                    </RadioButton>
                    <RadioButton
                        GroupName="Tools"
                        IsChecked="{Binding ActiveTool, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=ColorPicker}"
                        Style="{StaticResource toolBarToggleButtonStyle}"
                        ToolTip="Color Picker Tool">
                        <Image Style="{StaticResource iconColorPicker}" />
                    </RadioButton>
                    <RadioButton
                        GroupName="Tools"
                        IsChecked="{Binding ActiveTool, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=FloodFill}"
                        Style="{StaticResource toolBarToggleButtonStyle}"
                        ToolTip="Flood Fill Tool">
                        <Image Style="{StaticResource iconFloodFill}" />
                    </RadioButton>
                </StackPanel>
            </StackPanel>

            <StackPanel>
                <TextBlock HorizontalAlignment="Center" Text="Active Colors" />
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                    <Border BorderBrush="Black" BorderThickness="2">
                        <Border BorderBrush="White" BorderThickness="2">
                            <Rectangle
                                Width="26"
                                Height="26"
                                ToolTip="Primary Color">
                                <Rectangle.Fill>
                                    <MultiBinding Converter="{StaticResource PaletteIndexToColorConverter}">
                                        <Binding Path="ActivePalette" />
                                        <Binding Path="PrimaryColor" />
                                    </MultiBinding>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Border>
                    <Border BorderBrush="Black" BorderThickness="2">
                        <Border BorderBrush="White" BorderThickness="2">
                            <Rectangle
                                Width="26"
                                Height="26"
                                ToolTip="Secondary Color">
                                <Rectangle.Fill>
                                    <MultiBinding Converter="{StaticResource PaletteIndexToColorConverter}">
                                        <Binding Path="ActivePalette" />
                                        <Binding Path="SecondaryColor" />
                                    </MultiBinding>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Border>
                </StackPanel>
            </StackPanel>

            <StackPanel Margin="8,0,0,0">
                <TextBlock HorizontalAlignment="Center" Text="Remap" />

                <Button
                    HorizontalAlignment="Center"
                    Click="{s:Action RemapColors}"
                    IsEnabled="{Binding CanRemapColors}"
                    Style="{StaticResource toolBarButtonStyle}"
                    ToolTip="Remap Palette Colors">
                    <Image Style="{StaticResource iconRemap}" />
                </Button>
            </StackPanel>
        </StackPanel>

        <!--  Palette Display  -->
        <StackPanel
            Grid.Row="1"
            Grid.ColumnSpan="2"
            Margin="4,4,0,0"
            Orientation="Horizontal">
            <ComboBox ItemsSource="{Binding Palettes}" SelectedValue="{Binding ActivePalette}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <ItemsControl
                Margin="1,0,3,5"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                ItemsSource="{Binding ActivePalette.Colors}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel
                            Margin="0,0,3,5"
                            IsItemsHost="True"
                            Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border
                            Margin="1,0,1,0"
                            BorderBrush="Black"
                            BorderThickness="1">
                            <Border BorderBrush="White" BorderThickness="1">
                                <Rectangle
                                    Width="28"
                                    Height="28"
                                    Fill="{Binding Converter={StaticResource PaletteEntryToSolidColorBrushConverter}}">
                                    <Rectangle.InputBindings>
                                        <MouseBinding
                                            s:View.ActionTarget="{Binding DataContext, ElementName=pixelEditor}"
                                            Command="{s:Action SetPrimaryColor}"
                                            CommandParameter="{Binding Converter={StaticResource PaletteEntryToIndexConverter}}"
                                            MouseAction="LeftClick" />
                                        <MouseBinding
                                            s:View.ActionTarget="{Binding DataContext, ElementName=pixelEditor}"
                                            Command="{s:Action SetSecondaryColor}"
                                            CommandParameter="{Binding Converter={StaticResource PaletteEntryToIndexConverter}}"
                                            MouseAction="RightClick" />
                                    </Rectangle.InputBindings>
                                </Rectangle>
                            </Border>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>

        <!--  Image Display  -->
        <ScrollViewer
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            HorizontalScrollBarVisibility="Auto"
            VerticalScrollBarVisibility="Auto">
            <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Grid.Resources>
                    <ScaleTransform x:Key="transform" ScaleX="{Binding Zoom}" ScaleY="{Binding Zoom}" />
                </Grid.Resources>

                <i:Interaction.Behaviors>
                    <behaviors:MouseCaptureBehavior Proxy="{Binding}" />
                </i:Interaction.Behaviors>

                <!--  Editable Image  -->
                <Image
                    Panel.ZIndex="1"
                    dd:DragDrop.DropHandler="{Binding}"
                    dd:DragDrop.IsDropTarget="True"
                    LayoutTransform="{StaticResource transform}"
                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                    SnapsToDevicePixels="True"
                    Source="{Binding BitmapAdapter.Bitmap}"
                    Stretch="None" />

                <!--  Checkered Background  -->
                <Rectangle
                    Panel.ZIndex="0"
                    Fill="{StaticResource CheckeredBrush}"
                    LayoutTransform="{StaticResource transform}" />

                <!--  Selection and Paste Overlay  -->
                <Canvas
                    x:Name="overlayCanvas"
                    MaxWidth="{Binding BitmapAdapter.Width}"
                    MaxHeight="{Binding BitmapAdapter.Height}"
                    Panel.ZIndex="2"
                    dd:DragDrop.DragHandler="{Binding}"
                    dd:DragDrop.DropHandler="{Binding}"
                    dd:DragDrop.IsDragSource="True"
                    dd:DragDrop.IsDropTarget="True"
                    ClipToBounds="True"
                    LayoutTransform="{StaticResource transform}">

                    <Rectangle
                        Canvas.Left="{Binding Selection.SelectionRect.SnappedLeft}"
                        Canvas.Top="{Binding Selection.SelectionRect.SnappedTop}"
                        Width="{Binding Selection.SelectionRect.SnappedWidth}"
                        Height="{Binding Selection.SelectionRect.SnappedHeight}"
                        ClipToBounds="False"
                        Fill="{StaticResource editSelectionFillBrush}"
                        SnapsToDevicePixels="True"
                        Stroke="Black"
                        StrokeDashArray="3 2"
                        StrokeThickness="1"
                        Visibility="{Binding Selection.HasSelection, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />

                    <Rectangle
                        Canvas.Left="{Binding Paste.Rect.SnappedLeft}"
                        Canvas.Top="{Binding Paste.Rect.SnappedTop}"
                        Width="{Binding Paste.Rect.SnappedWidth, FallbackValue=0}"
                        Height="{Binding Paste.Rect.SnappedHeight, FallbackValue=0}"
                        Panel.ZIndex="4"
                        Fill="{StaticResource editSelectionFillBrush}"
                        IsHitTestVisible="False"
                        SnapsToDevicePixels="True"
                        Stroke="Black"
                        StrokeDashArray="3 2"
                        StrokeThickness="1" />

                    <Image
                        Canvas.Left="{Binding Paste.Rect.SnappedLeft}"
                        Canvas.Top="{Binding Paste.Rect.SnappedTop}"
                        Width="{Binding Paste.Rect.SnappedWidth, FallbackValue=0}"
                        Height="{Binding Paste.Rect.SnappedHeight, FallbackValue=0}"
                        RenderOptions.BitmapScalingMode="NearestNeighbor"
                        SnapsToDevicePixels="True"
                        Source="{Binding Paste.OverlayImage.Bitmap}"
                        Stretch="None" />
                </Canvas>

                <!--  Gridline Overlay  -->
                <ItemsControl
                    Grid.Row="0"
                    Grid.Column="0"
                    Panel.ZIndex="5"
                    IsHitTestVisible="False"
                    ItemsSource="{Binding Gridlines}"
                    Visibility="{Binding ShowGridlines, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type model:Gridline}">
                            <Line
                                RenderOptions.EdgeMode="Aliased"
                                SnapsToDevicePixels="True"
                                Stroke="{DynamicResource gridLineBrush}"
                                StrokeThickness="1"
                                UseLayoutRounding="True"
                                X1="{Binding X1}"
                                X2="{Binding X2}"
                                Y1="{Binding Y1}"
                                Y2="{Binding Y2}">
                                <Line.LayoutTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Line.LayoutTransform>
                            </Line>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
